# Capstone-Project-S2020

ROS project for scanning architectural panels and various objects using GPIS algorithm. 

catkin_ws contains source code packages for robot control and Algorithm
thirdparty_ws contains all third party packages


Usage: 

1. Launch system to setup real robot, intel camera, and moveit nodes

    $ roslaunch robotic_sensing system_start.launch
    
2. Start robot server for sending motion commands 

    $ roslaunch robot_motion_server move_arm_server.launch
    
3. Initialise GPIS algorithm with commandline arguments stating mode of scan. auto option performs scans autonomously using gaussian noise, 
panel option does a single scan from top view, and object option performs scanning using predetermined ideal poses

    $ rosrun gpismap_ros gpismap3 _command:=auto   or   rosrun gpismap_ros gpismap3 _command:=panel   or   rosrun gpismap_ros gpismap3 _command:=object
    
4. Perform a service call to start algorithm and robot server

    $ rosservice call /srv_mapper_update "{}"
    
5. Allow system to run and auto terminate else for any issues hit ctrl-z on relevant terminals to cancel processes
    
    results can be viewed from the /mesh sub directory of gpismap_ros package or alternatively by subscribing to the pointcloud and gp_mesh topic in rviz 
    during scanning
    

Note: All commands must be entered in a new terminal 

